This package is maintained with git-buildpackage(1). It follows DEP-14 for
branch naming (e.g. using debian/master for the current version in Debian
unstable due Debian Python team policy).

It uses pristine-tar(1) to store enough information in git to generate bit
identical tarballs when building the package without having downloaded an
upstream tarball first.

When working with patches it is recommended to use "gbp pq import" to import
the patches, modify the source and then use "gbp pq export --commit" to commit
the modifications.

The changelog can be generated using "gbp dch" so if you submit any changes
don't bother to add changelog entries but rather provide a nice git commit
message that can then end up in the changelog.

It is recommended to build the package with pbuilder using:

    gbp buildpackage --git-pbuilder

For information on how to set up a pbuilder environment see the git-pbuilder(1)
manpage. In short:

    DIST=sid git-pbuilder create
    gbp clone https://salsa.debian.org/python-team/packages/pydoctor.git
    cd pydoctor
    gbp buildpackage --git-pbuilder


## Importing a new version ##
This package uses the upstream git tree to merge in new versions into the
packaging tree. This means you need to have added the upstream Pydoctor Git
tree from GitHub to manage the following steps.

Add another remote for the GitHub resource to the local git tree and fetch
the data from the remote site.

  git remote add github https://github.com/twisted/pydoctor.git
  git fetch github

Use uscan to see what the most recent version for Pydoctor that is available.

  uscan --report-status
  ...
    $newversion  = 21.12.1
    $lastversion = 19.11.0+git20200303.47424e7

You can import the desired version by git-buildpackage now.

  gbp import-orig --sign-tags --uscan --upstream-vcs-tag=21.12.1

That's basically all to import a new version.

 -- Carsten Schoenert <c.schoenert>  Sat, 15 Jan 2022 08:13:00 +0100
